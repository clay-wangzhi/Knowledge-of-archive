(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{578:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"_01-python基础语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_01-python基础语法"}},[s._v("#")]),s._v(" 01 Python基础语法")]),s._v(" "),a("p",[s._v("Python 语言 后续补充")]),s._v(" "),a("p",[s._v("计算机基础知识 后续补充")]),s._v(" "),a("h2",{attrs:{id:"python-解释器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python-解释器"}},[s._v("#")]),s._v(" Python 解释器")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("解释器")]),s._v(" "),a("th",[s._v("说明")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[a("code",[s._v("CPython")])]),s._v(" "),a("td",[s._v("官方，C 语言开发，最广泛的 Python 解释器")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("IPython")])]),s._v(" "),a("td",[s._v("一个交互式、功能增强的"),a("code",[s._v("CPython")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("PyPy")])]),s._v(" "),a("td",[s._v("Python 语言写的 Python 解释器，"),a("code",[s._v("JIT")]),s._v("技术，动态编译 Python 代码")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("Jython")])]),s._v(" "),a("td",[s._v("Python 的源代码编译成 Java 的字节码，跑在"),a("code",[s._v("JVM")]),s._v("上")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("IronPython")])]),s._v(" "),a("td",[s._v("与"),a("code",[s._v("Jytho")]),s._v("n类似，运行在"),a("code",[s._v(".Net")]),s._v("平台上的解释器，Python 代码被编译成"),a("code",[s._v(".Net")]),s._v("的字节码")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("stackless")])]),s._v(" "),a("td",[s._v("Python的增强版本解释器，不使用"),a("code",[s._v("CPython")]),s._v("的 C 的栈，采用微线程概念编程，并发编程")])])])]),s._v(" "),a("h2",{attrs:{id:"基础语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础语法"}},[s._v("#")]),s._v(" 基础语法")]),s._v(" "),a("h3",{attrs:{id:"注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注释"}},[s._v("#")]),s._v(" 注释")]),s._v(" "),a("p",[a("code",[s._v("#")]),s._v(" 井号标注的文本")]),s._v(" "),a("h3",{attrs:{id:"数字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数字"}},[s._v("#")]),s._v(" 数字")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("整数"),a("code",[s._v("int")])]),s._v(" "),a("ul",[a("li",[a("code",[s._v("Python3")]),s._v("开始不再区分 long 、int ，long 被重命名为int，所以只有 int 类型了")]),s._v(" "),a("li",[s._v("进制表示：\n"),a("ul",[a("li",[s._v("十进制10")]),s._v(" "),a("li",[s._v("十六进制0x10")]),s._v(" "),a("li",[s._v("八进制0o10")]),s._v(" "),a("li",[s._v("二进制0b10")])])]),s._v(" "),a("li",[s._v("bool 类型，有2个值 True、False")])])]),s._v(" "),a("li",[a("p",[s._v("浮点数 float")]),s._v(" "),a("ul",[a("li",[s._v("1.2、3.1415、-0.12、1.46e9等价于科学计数法1.46*10"),a("sup",[s._v("9")])])])]),s._v(" "),a("li",[a("p",[s._v("复数 complex")]),s._v(" "),a("ul",[a("li",[s._v("1+2j 或 +2J")])])])]),s._v(" "),a("h3",{attrs:{id:"字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[s._v("#")]),s._v(" 字符串")]),s._v(" "),a("ul",[a("li",[s._v("使用‘ ”单双引号引用的字符的序列")]),s._v(" "),a("li",[s._v("'''和\"\"\" 单双三引号，可以跨行、可以在其中自由的使用单双引号")]),s._v(" "),a("li",[s._v("r 前缀：在字符串前面加上 r 或者 R 前缀，表示该字符串不做特殊的处理")]),s._v(" "),a("li",[s._v("f 前缀：3.6版本开始，新增 f 前缀，格式化字符串")])]),s._v(" "),a("h3",{attrs:{id:"转义序列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#转义序列"}},[s._v("#")]),s._v(" 转义序列")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("\\\\")]),s._v(" "),a("code",[s._v("\\t")]),s._v(" "),a("code",[s._v("\\r")]),s._v(" "),a("code",[s._v("\\n")]),s._v(" "),a("code",[s._v("\\'")]),s._v(" "),a("code",[s._v('\\"')])]),s._v(" "),a("li",[s._v("上面每一个转义字符只代表一个字符，例如"),a("code",[s._v("\\t")]),s._v("显示时占了4个字符位置，但是它是一个字符")]),s._v(" "),a("li",[s._v("前缀 r，把里面的所有字符当普通字符对待，则转义字符就不转义了")])]),s._v(" "),a("p",[s._v("转义：让字符不再是它当前的意义，例如 \\t，t 就不是当前意义字符 t 了，而是被 \\ 转成了 tab 键")]),s._v(" "),a("h3",{attrs:{id:"缩进"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缩进"}},[s._v("#")]),s._v(" 缩进")]),s._v(" "),a("ul",[a("li",[s._v("未使用 C 等语言的花括号，而是采用缩进的方式表示层次关系")]),s._v(" "),a("li",[s._v("约定使用4个空格缩进")])]),s._v(" "),a("h3",{attrs:{id:"续行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#续行"}},[s._v("#")]),s._v(" 续行")]),s._v(" "),a("ul",[a("li",[s._v("在行尾使用 \\，注意 \\ 之后除了紧跟着换行之外不能有其他字符")]),s._v(" "),a("li",[s._v("如果使用各种括号，认为括号内是一个整体，其内部跨行不用 \\")])]),s._v(" "),a("h3",{attrs:{id:"标识符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标识符"}},[s._v("#")]),s._v(" 标识符")]),s._v(" "),a("p",[a("strong",[s._v("标识符")])]),s._v(" "),a("ol",[a("li",[s._v("一个名字，用来指代一个值")]),s._v(" "),a("li",[s._v("只能是字母、下划线和数字")]),s._v(" "),a("li",[s._v("只能以字母或下划线开头")]),s._v(" "),a("li",[s._v("不能是 python 的关键字，例如 def、class 就不能作为标识符")]),s._v(" "),a("li",[s._v("Python 是大小写敏感的")])]),s._v(" "),a("p",[s._v("标识符约定：")]),s._v(" "),a("ul",[a("li",[s._v("不允许使用中文，也不建议使用拼音")]),s._v(" "),a("li",[s._v("不要使用歧义单词，例如class_")]),s._v(" "),a("li",[s._v("在python中不要随便使用下划线开头的标识符")])]),s._v(" "),a("p",[a("strong",[s._v("常量")])]),s._v(" "),a("ul",[a("li",[s._v("一旦赋值不能改变值的标识符")]),s._v(" "),a("li",[s._v("python中无法定义常量")])]),s._v(" "),a("p",[a("strong",[s._v("字面常量")])]),s._v(" "),a("ul",[a("li",[s._v("一个单独的不可变量，例如 12、\"abc\" 、'2341356514.03e-9'")])]),s._v(" "),a("p",[a("strong",[s._v("变量")])]),s._v(" "),a("ul",[a("li",[s._v("赋值后，可以改变值的标识符")])]),s._v(" "),a("p",[a("strong",[s._v("标识符本质")])]),s._v(" "),a("p",[s._v("每一个标识符对应一个具有数据结构的值，但是这个值不方便直接访问，程序员就可以通过其对应的标\n识符来访问数据，标识符就是一个指代。一句话，标识符是给程序员编程使用的。")]),s._v(" "),a("h3",{attrs:{id:"语言类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语言类型"}},[s._v("#")]),s._v(" 语言类型")]),s._v(" "),a("blockquote",[a("p",[s._v("详见 https://wiki.clay-wangzhi.com/23-wei-fen-lei/bian-cheng-yu-yan-de-fen-lei")])]),s._v(" "),a("h3",{attrs:{id:"false-等价"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#false-等价"}},[s._v("#")]),s._v(" False 等价")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("对象/常量")]),s._v(" "),a("th",[s._v("值")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v('""')]),s._v(" "),a("td",[s._v("假")])]),s._v(" "),a("tr",[a("td",[s._v("“string”")]),s._v(" "),a("td",[s._v("真")])]),s._v(" "),a("tr",[a("td",[s._v("0")]),s._v(" "),a("td",[s._v("假")])]),s._v(" "),a("tr",[a("td",[s._v(">=1")]),s._v(" "),a("td",[s._v("真")])]),s._v(" "),a("tr",[a("td",[s._v("<=-1")]),s._v(" "),a("td",[s._v("真")])]),s._v(" "),a("tr",[a("td",[s._v("()空元组")]),s._v(" "),a("td",[s._v("假")])]),s._v(" "),a("tr",[a("td",[s._v("[]空列表")]),s._v(" "),a("td",[s._v("假")])]),s._v(" "),a("tr",[a("td",[s._v("{}空字典")]),s._v(" "),a("td",[s._v("假")])]),s._v(" "),a("tr",[a("td",[s._v("None")]),s._v(" "),a("td",[s._v("假")])])])]),s._v(" "),a("p",[s._v("False 等价布尔值，相当于"),a("code",[s._v("bool(value)")])]),s._v(" "),a("ul",[a("li",[s._v("空容器\n"),a("ul",[a("li",[s._v("空集合 set")]),s._v(" "),a("li",[s._v("空字典 dict")]),s._v(" "),a("li",[s._v("空列表 list")]),s._v(" "),a("li",[s._v("空元组 tuple")])])]),s._v(" "),a("li",[s._v("空字符串")]),s._v(" "),a("li",[s._v("None")]),s._v(" "),a("li",[s._v("0")])]),s._v(" "),a("h3",{attrs:{id:"逻辑运算真值表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算真值表"}},[s._v("#")]),s._v(" 逻辑运算真值表")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/clay-wangzhi/blogImg/raw/master/blogImg/log_op.png",alt:"log_ope"}})]),s._v(" "),a("h3",{attrs:{id:"运算符-operator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算符-operator"}},[s._v("#")]),s._v(" 运算符 Operator")]),s._v(" "),a("p",[a("strong",[s._v("算数运算符")])]),s._v(" "),a("p",[s._v("+、-、*、/、//向下取整整除、%取模、**幂")]),s._v(" "),a("p",[s._v("注：在"),a("code",[s._v("Python2")]),s._v("中/和//都是整除。")]),s._v(" "),a("p",[a("strong",[s._v("位运算符")])]),s._v(" "),a("p",[s._v("&位与、|位或、^异或、<<左移、>>右移")]),s._v(" "),a("p",[s._v("~按位取反，包括符号位")]),s._v(" "),a("p",[a("strong",[s._v("比较运算符")])]),s._v(" "),a("p",[s._v("==、!=、>、>=、<、<=")]),s._v(" "),a("p",[s._v("链式比较： 4 > 3 > 2")]),s._v(" "),a("p",[a("strong",[s._v("逻辑运算符")])]),s._v(" "),a("p",[s._v("与and、或or、非not")]),s._v(" "),a("p",[s._v("逻辑运算符也是短路运算符")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("and 如果前面的表达式等价为False，后面就没有必要计算了，这个逻辑表达式最终一定等价为\nFalse\n1 and '2' and 0\n0 and 'abc' and 1")])]),s._v(" "),a("li",[a("p",[s._v("or 如果前面的表达式等价为True，后面没有必要计算了，这个逻辑表达式最终一定等价为True\n1 or False or None")])]),s._v(" "),a("li",[a("p",[s._v("特别注意，返回值。返回值不一定是 bool 型")])]),s._v(" "),a("li",[a("p",[s._v("把最频繁使用的，做最少计算就可以知道结果的条件放到前面，如果它能短路，将大大减少计算量")])])]),s._v(" "),a("p",[a("strong",[s._v("赋值运算符")])]),s._v(" "),a("p",[s._v("a = min(3, 5)")]),s._v(" "),a("p",[s._v("+=、 -= 、*=、/=、%=、//= 等")]),s._v(" "),a("p",[s._v("x = y = z = 10")]),s._v(" "),a("p",[a("strong",[s._v("成员运算符")])]),s._v(" "),a("p",[s._v("in、not in")]),s._v(" "),a("p",[a("strong",[s._v("身份运算符")])]),s._v(" "),a("p",[s._v("is、is not")]),s._v(" "),a("h3",{attrs:{id:"运算符优先级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算符优先级"}},[s._v("#")]),s._v(" 运算符优先级")]),s._v(" "),a("ul",[a("li",[s._v("单目运算符 > 双目运算符")]),s._v(" "),a("li",[s._v("算数运算符 > 位运算符 > 比较运算符 > 逻辑运算符\n"),a("ul",[a("li",[s._v("-3 + 2 > 5 and 'a' > 'b'")])])])]),s._v(" "),a("p",[s._v("搞不清楚就使用括号。长表达式，多用括号，易懂、易读。")]),s._v(" "),a("h3",{attrs:{id:"表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#表达式"}},[s._v("#")]),s._v(" 表达式")]),s._v(" "),a("p",[s._v("由数字、符号、括号、变量等的组合。有算数表达式、逻辑表达式、赋值表达式、lambda 表达式等\n等。")]),s._v(" "),a("p",[s._v("Python 中，赋值即定义。Python 是动态语言，只有赋值才会创建一个变量，并决定了变量的类型和\n值。")]),s._v(" "),a("p",[s._v("如果一个变量已经定义，赋值相当于重新定义。")]),s._v(" "),a("h2",{attrs:{id:"内建函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内建函数"}},[s._v("#")]),s._v(" 内建函数")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("内建函数")]),s._v(" "),a("th",[s._v("函数签名")]),s._v(" "),a("th",[s._v("说明")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("print")]),s._v(" "),a("td",[s._v("print(value, ..., sep=' ', end='\\n')")]),s._v(" "),a("td",[s._v("将多个数据输出到控制台，默认使用空格分隔、\\n 换行")])]),s._v(" "),a("tr",[a("td",[s._v("input")]),s._v(" "),a("td",[s._v("input([prompt])")]),s._v(" "),a("td",[s._v("在控制台和用户交互，接收用户输入，并返回字符串")])]),s._v(" "),a("tr",[a("td",[s._v("int")]),s._v(" "),a("td",[s._v("int(value)")]),s._v(" "),a("td",[s._v("将给定的值，转换成整数。int 本质是类")])]),s._v(" "),a("tr",[a("td",[s._v("str")]),s._v(" "),a("td",[s._v("str(value)")]),s._v(" "),a("td",[s._v("将给定的值，转换成字符串。str 本质是元类")])]),s._v(" "),a("tr",[a("td",[s._v("type")]),s._v(" "),a("td",[s._v("type(value)")]),s._v(" "),a("td",[s._v("返回对象的类型。本质是元类")])]),s._v(" "),a("tr",[a("td",[s._v("isinstance")]),s._v(" "),a("td",[s._v("isinstance(obj, class_or_tuple)")]),s._v(" "),a("td",[s._v("比较对象的类型，类型可以是 obj 的基类")])])])]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("sep"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\n'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" end"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'***'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 返回的是类型，不是字符串")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'abc'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 返回的是类型，不是字符串")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 返回type，意思是这个int类型由type构造出来")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 返回type，也是类型")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 也是type")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("isinstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("isinstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# True")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h2",{attrs:{id:"程序控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#程序控制"}},[s._v("#")]),s._v(" 程序控制")]),s._v(" "),a("ul",[a("li",[s._v("顺序\n"),a("ul",[a("li",[s._v("按照先后顺序一条条执行\n例如，先洗手，再吃饭，再洗碗")])])]),s._v(" "),a("li",[s._v("分支\n"),a("ul",[a("li",[s._v("根据不同的情况判断，条件满足执行某条件下的语句\n例如，先洗手，如果饭没有做好，玩游戏；如果饭做好了，就吃饭；如果饭都没有做，叫外卖")])])]),s._v(" "),a("li",[s._v("循环\n"),a("ul",[a("li",[s._v("条件满足就反复执行，不满足就不执行或不再执行\n例如，先洗手，看饭好了没有，没有好，一会来看一次是否好了，一会儿来看一次，直到饭\n好了，才可是吃饭。这里循环的条件是饭没有好，饭没有好，就循环的来看饭好了没有")])])])]),s._v(" "),a("h3",{attrs:{id:"单分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单分支"}},[s._v("#")]),s._v(" 单分支")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" condition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    代码块\n    \n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# if True:")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1 less than 2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 代码块")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("ul",[a("li",[s._v("condition 必须是一个 bool 类型，这个地方有一个隐式转换 bool(condition) ，相当于 False 等价")]),s._v(" "),a("li",[s._v("if 语句这行最后，会有一个冒号，冒号之后如果有多条语句的代码块，需要另起一行，并缩进\n"),a("ul",[a("li",[s._v("if、for、def、class等关键字后面都可以跟代码块")]),s._v(" "),a("li",[s._v("这些关键后面，如果有一条语句，也可以跟在这一行后面。例如 "),a("code",[s._v("if 1>2: pass")])])])])]),s._v(" "),a("h3",{attrs:{id:"多分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多分支"}},[s._v("#")]),s._v(" 多分支")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" condition1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    代码块"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" condition2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    代码块"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" condition3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    代码块"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    代码块\n    \n\n   \na "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'negative'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 相当于 a >= 0")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zero'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 相当于 a > 0")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'positive'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("ul",[a("li",[s._v("多分支结构，只要有一个分支被执行，其他分支都不会被执行")]),s._v(" "),a("li",[s._v("前一个条件被测试过，下一个条件相当于隐含着这个条件")])]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 嵌套")]),s._v("\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zero'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'negative'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'positive'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h3",{attrs:{id:"while-循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#while-循环"}},[s._v("#")]),s._v(" while 循环")]),s._v(" "),a("p",[s._v("while循环多用于死循环，或者不明确知道循环次数的场景")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" cond"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    block\n\n    \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 死循环")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("pass")]),s._v("\n\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 条件满足则进入循环")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h3",{attrs:{id:"for-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-语句"}},[s._v("#")]),s._v(" for 语句")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" element "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" iterable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    block\n   \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("table",[a("thead",[a("tr",[a("th",[s._v("内建函数")]),s._v(" "),a("th",[s._v("函数签名")]),s._v(" "),a("th",[s._v("说明")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("range")]),s._v(" "),a("td",[s._v("range(stop)"),a("br"),s._v("range(start, stop, [step])")]),s._v(" "),a("td",[s._v("返回惰性的对象"),a("br"),s._v("可以生成一个序列，遍历它就可以得到这个序列的一个个元素"),a("br"),s._v("前包后不包")])])])]),s._v(" "),a("h3",{attrs:{id:"continue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#continue"}},[s._v("#")]),s._v(" continue")]),s._v(" "),a("p",[s._v("跳过当前循环的当次循环，继续下一次循环")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("continue")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"break"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#break"}},[s._v("#")]),s._v(" break")]),s._v(" "),a("p",[s._v("结束当前循环")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 计算1000以内的被7整除的前20个正整数")]),s._v("\ncount "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\tcount "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" count "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("总结")]),s._v(" "),a("ul",[a("li",[s._v("continue 和 break 是循环的控制语句，只影响当前循环，包括 while、for 循环")]),s._v(" "),a("li",[s._v("如果循环嵌套， continue 和 break 也只影响语句所在的那一层循环")]),s._v(" "),a("li",[s._v("continue 和 break 只影响循环，所以"),a("code",[s._v("if cond: break")]),s._v("不是跳出 if，而是终止 if 外的 break 所在的循环")]),s._v(" "),a("li",[s._v("分支和循环结构可以嵌套使用，可以嵌套多层")])]),s._v(" "),a("h3",{attrs:{id:"else-字句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#else-字句"}},[s._v("#")]),s._v(" else 字句")]),s._v(" "),a("p",[s._v("如果循环正常结束，else子句会被执行，即使是可迭代对象没有什么元素可迭代")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可迭代对象没有迭代")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("pass")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ok'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ok'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("continue")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ok'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("有上例可知，一般情况下，循环正常执行，只要当前循环不是被break打断的，就可以执行else子句。\n哪怕是range(0)也可以执行else子句。")]),s._v(" "),a("h3",{attrs:{id:"三元表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三元表达式"}},[s._v("#")]),s._v(" 三元表达式")]),s._v(" "),a("p",[s._v("在Python中，也有类似C语言的三目运算符构成的表达式，但python中的三元表达式不支持复杂的语句")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("真值表达式 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" 条件表达式 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" 假值表达式\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("三元表达式比较适合简化非常简单的if-else语句")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 判断用户的输入的值，如果为空，输出"empty"，否则输出该值')]),s._v("\n\nvalue "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("input")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'>>>'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'empty'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   \nvalue "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("input")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'>>>'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" value "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'empty'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);