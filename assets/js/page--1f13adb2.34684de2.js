(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{1191:function(v,t,_){"use strict";_.r(t);var r=_(1),s=Object(r.a)({},(function(){var v=this,t=v.$createElement,r=v._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[r("p",[v._v("TCP协议即TCP（传输控制协议）。")]),v._v(" "),r("p",[v._v("Transmission Control Protocol 传输控制协议TCP是一种面向连接（连接导向）的、可靠的、基于字节流的传输层（Transport layer）通信协议，由IETF的RFC 793说明（specified）。TCP在IP报文的协议号是6。在简化的计算机网络OSI模型中，它完成第四层传输层所指定的功能，UDP是同一层内另一个重要的传输协议。")]),v._v(" "),r("h2",{attrs:{id:"tcp首部"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tcp首部"}},[v._v("#")]),v._v(" TCP首部")]),v._v(" "),r("p",[r("code",[v._v("TCP")]),v._v("数据也是封装在"),r("code",[v._v("IP")]),v._v("数据报中，"),r("code",[v._v("TCP")]),v._v("首部格式如下图所示：")]),v._v(" "),r("p",[r("img",{attrs:{src:_(689),alt:"tcp header"}})]),v._v(" "),r("p",[v._v("标记位：")]),v._v(" "),r("ul",[r("li",[v._v("SYN：同步标记位")]),v._v(" "),r("li",[v._v("ACK：确认标记位")]),v._v(" "),r("li",[v._v("RST：重置标记位")]),v._v(" "),r("li",[v._v("PSH：推标记位")]),v._v(" "),r("li",[v._v("URG：紧急标记位")]),v._v(" "),r("li",[v._v("FIN：结束标记位")])]),v._v(" "),r("h2",{attrs:{id:"三次握手"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三次握手"}},[v._v("#")]),v._v(" 三次握手")]),v._v(" "),r("p",[r("img",{attrs:{src:_(690),alt:"img"}})]),v._v(" "),r("ol",[r("li",[v._v("第一次握手：客户端发送"),r("strong",[v._v("syn包")]),v._v("(syn=j)到服务器，并进入"),r("strong",[v._v("SYN_SEND")]),v._v("状态，等待服务器确认;")]),v._v(" "),r("li",[v._v("第二次握手：服务器收到syn包，必须"),r("strong",[v._v("确认客户的SYN")]),v._v("(ack=j+1)，"),r("strong",[v._v("同时自己也发送一个SYN包(syn=k)，即SYN+ACK包")]),v._v("，此时服务器进入"),r("strong",[v._v("SYN_RECV")]),v._v("状态;")]),v._v(" "),r("li",[v._v("第三次握手：客户端收到服务器的SYN+ACK包，向服务器发送"),r("strong",[v._v("确认包ACK")]),v._v("(ack=k+1)，此包发送完毕，客户端和服务器进入"),r("strong",[v._v("ESTABLISHED")]),v._v("状态，完成三次握手。")])]),v._v(" "),r("p",[r("img",{attrs:{src:_(691),alt:"img"}})]),v._v(" "),r("h2",{attrs:{id:"四次挥手"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#四次挥手"}},[v._v("#")]),v._v(" 四次挥手")]),v._v(" "),r("p",[r("img",{attrs:{src:_(692),alt:"img"}})]),v._v(" "),r("p",[r("strong",[v._v("注意：中断连接端可以是Client端，也可以是Server端，那么就是图上的流程反过来操作")])]),v._v(" "),r("p",[v._v("解释（以客户端发起断开为例子）")]),v._v(" "),r("ul",[r("li",[v._v("假设Client端发起中断连接请求，也就是发送FIN报文。Server端接到FIN报文后，意思是说”"),r("strong",[v._v("我Client端没有数据要发给你了")]),v._v("“")]),v._v(" "),r("li",[v._v("但是如果你还有数据没有发送完成，则不必急着关闭Socket，可以继续发送数据。所以你先发送ACK，”"),r("strong",[v._v("告诉Client端，你的请求我收到了，但是我还没准备好，请继续你等我的消息")]),v._v("“。– 这个时候Client端就进入FIN_WAIT状态，继续等待Server端的FIN报文。当Server端确定数据已发送完成，则向Client端发送FIN报文，”"),r("strong",[v._v("告诉Client端，好了，我这边数据发完了，准备好关闭连接了")]),v._v("“。")]),v._v(" "),r("li",[v._v("Client端收到FIN报文后，”就知道可以关闭连接了，但是他还是不相信网络**，怕Server端不知道要关闭，所以发送ACK后进入TIME_WAIT状态，如果Server端没有收到ACK则可以重传**。“")]),v._v(" "),r("li",[v._v("Server端收到ACK后，”"),r("strong",[v._v("就知道可以断开连接了")]),v._v("“。Client端等待了2MSL后依然没有收到回复，则证明Server端已正常关闭，"),r("strong",[v._v("那好，我Client端也可以关闭连接了")]),v._v("。Ok，TCP连接就这样关闭了！")])]),v._v(" "),r("p",[r("img",{attrs:{src:_(693),alt:"img"}})]),v._v(" "),r("h2",{attrs:{id:"问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#问题"}},[v._v("#")]),v._v(" 问题")]),v._v(" "),r("p",[v._v("为什么连接的时候是三次握手，关闭的时候却是四次握手？")]),v._v(" "),r("p",[v._v("答：因为当Server端收到Client端的SYN连接请求报文后，"),r("strong",[v._v("可以直接发送SYN+ACK报文")]),v._v("。其中ACK报文是用来应答的，SYN报文是用来同步的。但是关闭连接时，当Server端收到FIN报文时，很可能并不会立即关闭SOCKET，所以只能先回复一个ACK报文，告诉Client端，”你发的FIN报文我收到了”。只有等到我Server端所有的报文都发送完了，我才能发送FIN报文，"),r("strong",[v._v("因此不能一起发送")]),v._v("。故需要四步握手。")]),v._v(" "),r("p",[v._v("为什么TIME_WAIT状态需要经过2MSL(最大报文段生存时间)才能返回到CLOSE状态？")]),v._v(" "),r("p",[v._v("答：虽然按道理，四个报文都发送完毕，我们可以直接进入CLOSE状态了，但是我们必须假象网络是不可靠的，"),r("strong",[v._v("有可以最后一个ACK丢失。所以TIME_WAIT状态就是用来重发可能丢失的ACK报文。")])]),v._v(" "),r("p",[v._v("那四次挥手又是为何呢？TCP协议是一种面向连接的、可靠的、基于字节流的运输层通信协议。"),r("strong",[v._v("TCP是全双工模式")]),v._v("，这就意味着，当主机1发出FIN报文段时，"),r("strong",[v._v("只是表示主机1已经没有数据要发送了")]),v._v("，主机1告诉主机2，它的数据已经全部发送完毕了；但是，"),r("strong",[v._v("这个时候主机1还是可以接受来自主机2的数据")]),v._v("；当主机2返回ACK报文段时，表示它已经知道主机1没有数据发送了，"),r("strong",[v._v("但是主机2还是可以发送数据到主机1的")]),v._v("；当主机2也发送了FIN报文段时，这个时候就表示主机2也没有数据要发送了，就会告诉主机1，我也没有数据要发送了，之后彼此就会愉快的中断这次TCP连接。")])])}),[],!1,null,null,null);t.default=s.exports},689:function(v,t,_){v.exports=_.p+"assets/img/TCP-header.ec43c2ea.jpg"},690:function(v,t,_){v.exports=_.p+"assets/img/01.6a5405d0.png"},691:function(v,t,_){v.exports=_.p+"assets/img/04.1337d586.png"},692:function(v,t,_){v.exports=_.p+"assets/img/02.2a5b2d01.png"},693:function(v,t,_){v.exports=_.p+"assets/img/05.0eb7a499.png"}}]);